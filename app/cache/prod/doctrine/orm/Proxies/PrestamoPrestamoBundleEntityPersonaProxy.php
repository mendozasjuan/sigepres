<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class PrestamoPrestamoBundleEntityPersonaProxy extends \Prestamo\PrestamoBundle\Entity\Persona implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setNacionalidad($nacionalidad)
    {
        $this->__load();
        return parent::setNacionalidad($nacionalidad);
    }

    public function getNacionalidad()
    {
        $this->__load();
        return parent::getNacionalidad();
    }

    public function setCedula($cedula)
    {
        $this->__load();
        return parent::setCedula($cedula);
    }

    public function getCedula()
    {
        $this->__load();
        return parent::getCedula();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setApellidos($apellidos)
    {
        $this->__load();
        return parent::setApellidos($apellidos);
    }

    public function getApellidos()
    {
        $this->__load();
        return parent::getApellidos();
    }

    public function setDireccion($direccion)
    {
        $this->__load();
        return parent::setDireccion($direccion);
    }

    public function getDireccion()
    {
        $this->__load();
        return parent::getDireccion();
    }

    public function setTelefono($telefono)
    {
        $this->__load();
        return parent::setTelefono($telefono);
    }

    public function getTelefono()
    {
        $this->__load();
        return parent::getTelefono();
    }

    public function setParroquia(\Prestamo\PrestamoBundle\Entity\Parroquia $parroquia)
    {
        $this->__load();
        return parent::setParroquia($parroquia);
    }

    public function getParroquia()
    {
        $this->__load();
        return parent::getParroquia();
    }

    public function addPrestamos(\Prestamo\PrestamoBundle\Entity\Prestamo $prestamo)
    {
        $this->__load();
        return parent::addPrestamos($prestamo);
    }

    public function getPrestamos()
    {
        $this->__load();
        return parent::getPrestamos();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nacionalidad', 'cedula', 'nombre', 'apellidos', 'direccion', 'telefono', 'parroquia');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}